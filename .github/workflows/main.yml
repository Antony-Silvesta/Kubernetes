name: Kubernetes CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the pipeline on pushes to the main branch

jobs:
  # Job 1: Build and push Docker image
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}

  # Job 2: Run tests with pytest
  test:
    runs-on: ubuntu-latest
    needs: build  # This job runs after the build job

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run tests
      - name: Run Pytest
        run: |
          pytest tests/

  # Job 3: Deploy to Kubernetes
  deploy:
    runs-on: ubuntu-latest
    needs: test  # This job runs after the test job

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      # Step 3: Authenticate to Kubernetes cluster
      - name: Authenticate to Kubernetes Cluster
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      # Step 4: Deploy with Helm
      - name: Deploy to Kubernetes
        run: |
          helm upgrade --install my-app ./helm-chart \
            --set image.repository=${{ secrets.DOCKER_USERNAME }}/my-app \
            --set image.tag=${{ github.sha }}
